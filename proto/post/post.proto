syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "google/protobuf/field_mask.proto";

option go_package = "github.com/4Sao1Sad/yuemnoi-post";

// LendingPost message representing the structure of the LendingPost object
message LendingPost {
    uint64 id = 1;           
    string item_name = 2;     
    string description = 3;   
    double price = 4;         
    bool active_status = 5;   
    string image_url = 6;     
    uint64 owner_id = 7;      
    google.protobuf.Timestamp updated_at = 8;  
}
  
// Request message for creating a new LendingPost
message CreateLendingPostRequest {
    string item_name = 1;     
    string description = 2;   
    double price = 3;         
    bool active_status = 4;   
    string image_url = 5;       
}

// Response message for the CreateLendingPost service
message CreateLendingPostResponse {
    uint64 id = 1;            
    string message = 2;       
}

// Request message for updating a LendingPost
message UpdateLendingPostRequest {
    uint64 id = 1;  
    string item_name = 2;                  
    string description = 3;   
    double price = 4;         
    bool active_status = 5;   
    string image_url = 6;       
    google.protobuf.FieldMask update_mask = 7; // Specify which fields to update
}

// Response message for the UpdateLendingPost service
message UpdateLendingPostResponse {
    string message = 1;       
}

// Request message for fetching LendingPost details
message GetLendingPostDetailRequest {
    uint64 id = 1;
}

// Request message for searching LendingPost
message SearchLendingPostRequest {
    string search_string = 1;   // Snake_case for field names is recommended in proto3
}

// Response message for a list of LendingPosts
message LendingPostList {
    repeated LendingPost posts = 1;   // Use `repeated` for arrays of LendingPost
}

// LendingPostService definition
service LendingPostService {
    rpc CreateLendingPost(CreateLendingPostRequest) returns (CreateLendingPostResponse) {}
    rpc UpdateLendingPost(UpdateLendingPostRequest) returns (UpdateLendingPostResponse){}
    rpc GetLendingPostDetail(GetLendingPostDetailRequest) returns (LendingPost) {}
    rpc SearchLendingPost(SearchLendingPostRequest) returns (LendingPostList) {}  // Wrapped repeated response
}

// LendingPost message representing the structure of the BorrowingPost object
message BorrowingPost {
    uint64 id = 1;
    string description = 2;     // Required field
    bool active_status = 3;     // Required field, booleanepeated LendingPost item_list = 4; // List of BorrowingPost
    uint64 owner_id = 4;        // Required field       
    google.protobuf.Timestamp updated_at = 5; 
  }
  
// Request message for creating a new BorrowingPost
message CreateBorrowingPostRequest {   
    string description = 1;   // Optional: Description of the item
    bool active_status = 2;   // Required: Active status of the post
    uint64 owner_id = 3;      // Required: ID of the owner (can be a UUID)
}

// Response message for the CreateBorrowingPost service
message CreateBorrowingPostResponse {
    uint64 id = 1;            // The autogenerated ID of the created post
    string message = 2;       // A success message or error details
}

// Request message for updating a BorrowingPost
message UpdateBorrowingPostRequest {
    uint64 id = 1;                  
    string description = 2;       
    bool active_status = 3;   
    google.protobuf.FieldMask update_mask = 4; // Specify which fields to update
}

// Response message for the UpdateBorrowingPost service
message UpdateBorrowingPostResponse {
    string message = 1;       
}

message GetBorrowingPostDetailRequest {
    uint64 id = 1;
}

message SearchBorrowingPostRequest {
    string searchString = 1;
}

message BorrowingPostList{
    repeated BorrowingPost borrowing_post = 1;
}

message GetBorrowingPostByIdRequest{
    uint64 id = 1;
}

service BorrowingPostService {
// RPC method to create a new BorrowingPost
    rpc CreateBorrowingPost(CreateBorrowingPostRequest) returns (CreateBorrowingPostResponse) {}
    rpc UpdateBorrowingPost(UpdateBorrowingPostRequest) returns (UpdateBorrowingPostResponse){}
    rpc GetBorrowingPostDetail(GetBorrowingPostDetailRequest) returns (BorrowingPost) {}
    rpc SearchBorrowingPost(SearchBorrowingPostRequest) returns (BorrowingPostList) {}
}